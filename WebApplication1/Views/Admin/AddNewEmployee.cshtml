@model JobTrack.Models.Employee.EmployeeData

<style type="text/css">
    .bootstrap-select > .dropdown-toggle {
        height: 40px;
    }

    .mandatory:after {
        content: ' *';
        color: Red;
    }

    .input {
        border: 0;
        outline: 0;
        background: transparent;
        border-bottom: 1px solid black;
    }
</style>
<div class="modal fade" data-backdrop="static" data-keyboard="false" id="AddNewEmployeeModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="min-width:50%" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #FF6E32; color: white">
                <h5 class="modal-title" id="confirmModalLabel">Add New Employee</h5>
                <button type="button" class="close modal-close" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Html.BeginForm("AddNewEmployee", "Admin", FormMethod.Post, new { Id = "myForm" }))
            {
                <div class="modal-body" style="background-color: #F3F3F9;">
                    <div id="divMsgClientEdit" class="alert alert-dismissible fade show" role="alert" style="margin-top:10px;">
                        <span id="spanMsgClientEdit">Message</span>
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.AntiForgeryToken()
                        <div class="container-fluid">
                            <div class="card">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-lg-12 text-center border-bottom-1 mb-0">
                                            <h5>EMPLOYEE DETAILS</h5>
                                        </div>
                                    </div>
                                    <div class="basic-form">
                                        <form>
                                            <div class="row">
                                                <div class="col-6 border-right-1">
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        @if (TempData["UserAccess"] != null)
                                                        {
                                                            <div class="row">
                                                                <div class="col-6 border-right-1">
                                                                    @Html.LabelFor(model => model.UserAccessName, htmlAttributes: new { @class = "control-label mandatory text-nowrap text-uppercase font-weight-bold" })
                                                                </div>
                                                                <div class="col-6">
                                                                    @Html.DropDownListFor(model => model.UserAccessName, TempData["UserAccess"] as SelectList, new { @class = "form-control selects show-tick", required = "required", title = "User Acess Required" })
                                                                    @Html.ValidationMessageFor(model => model.UserAccessName, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label mandatory text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control input", @maxlength = 45, required = "required", title = "UserName Required", autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label mandatory text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input", @maxlength = 50, required = "required", title = "First Name Required", autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label mandatory text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input", @maxlength = 50, required = "required", title = "Last Name Required", autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label mandatory text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control input", @maxlength = 100, required = "required", title = "Email Address Required", autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control input", @maxlength = 100, autocomplete = "off" } })
                                                                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-6">

                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.IsManager, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.CheckBoxFor(model => model.IsManager, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.IsManager, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.IsEditorialContact, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.CheckBoxFor(model => model.IsEditorialContact, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.IsEditorialContact, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.IsEmailList, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.CheckBoxFor(model => model.IsEmailList, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.IsEmailList, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.IsMandatoryRecepient, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.CheckBoxFor(model => model.IsMandatoryRecepient, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.IsMandatoryRecepient, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group border-bottom-1 mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.IsShowUser, htmlAttributes: new { @class = "control-label text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.CheckBoxFor(model => model.IsShowUser, new { htmlAttributes = new { @class = "form-control" } })
                                                                @Html.ValidationMessageFor(model => model.IsShowUser, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="form-group mb-0">
                                                        <div class="row">
                                                            <div class="col-6 border-right-1">
                                                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label mandatory text-nowrap text-uppercase font-weight-bold" })
                                                            </div>
                                                            <div class="col-6">
                                                                @Html.DropDownListFor(model => model.Status, new List<SelectListItem>
                                                                   { new SelectListItem{Text="ACTIVE", Value="ACTIVE"},
                                                                     new SelectListItem{Text="INACTIVE", Value="INACTIVE"}}, "-- Select --", new { @class = "form-control", required = "required", title = "Status Required" })

                                                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="alert alert-info">
                        <strong>NOTE:</strong> Default password is the same as the entered UserName
                    </div>
                </div>
                <div class="modal-footer" style="background-color: #FFF0EA;">
                    <button id="btnSave" type="button" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-secondary modal-close">Cancel</button>
                </div>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    //
    $('.datepicker').datepicker({
        todayHighlight: true,
        format: 'yyyy-mm-dd',
        clearBtn: true,
        autoclose: true
    });
    $(document).ready(function () {
        $('.selects').selectpicker(
            {
                width: '100%',
                title: '-- Select --',
                size: 10,
                liveSearch: true
            });
        $("#divMsgClientEdit").hide();
        //Update User Data
        $("#btnSave").click(function (e) {
            //Disable save button
            EnableSave(false);
            var $form = $('#myForm');
            //Validate form data
            $.validator.unobtrusive.parse($form);
            if ($form.valid()) {
                var obj =
                {
                    "UserAccessName": $("#UserAccessName").val(),
                    "UserName": $("#UserName").val(),
                    "FirstName": $("#FirstName").val(),
                    "LastName": $("#LastName").val(),
                    "EmailAddress": $("#EmailAddress").val(),
                    "MobileNumber": $("#MobileNumber").val(),
                    "IsManager": $("#IsManager").is(':checked'),
                    "IsEditorialContact": $("#IsEditorialContact").is(':checked'),
                    "IsEmailList": $("#IsEmailList").is(':checked'),
                    "IsMandatoryRecepient": $("#IsMandatoryRecepient").is(':checked'),
                    "IsShowUser": $("#IsShowUser").is(':checked'),
                    "Status": $("#Status").val()

                };
                var myJSON = JSON.stringify(obj);
                $.ajax({
                    type: "POST",
                    url: $form.attr("action"),
                    data: myJSON,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.Response == "Y") {
                            $("#divMsgClientEdit").addClass("alert-success");
                            $("#spanMsgClientEdit").text("Employee added successfully");
                            $("#divMsgClientEdit").show();

                            EnableSave(true);
                        }
                        else {
                            $("#divMsgClientEdit").addClass("alert-warning");
                            $("#spanMsgClientEdit").text(response.ErrorMessage);
                            $("#divMsgClientEdit").show();

                            EnableSave(true);
                        }
                    },
                    failure: function (response) {
                        $("#divMsgClientEdit").addClass("alert-warning");
                        $("#spanMsgClientEdit").text(response.responseText);
                        $("#divMsgClientEdit").show();

                        EnableSave(true);
                    },
                    error: function (response) {
                        $("#divMsgClientEdit").addClass("alert-warning");
                        $("#spanMsgClientEdit").text(response.responseText);
                        $("#divMsgClientEdit").show();

                        EnableSave(true);
                    }

                });

            }
            else {
                EnableSave(true);
                return false;
            }
        });
        //when close modal then reload window to refresh data
        $(".modal-close").click(function () {
            $('#AddNewManuscriptModal').modal('hide');
            window.location.reload();
        });
    });

    function EnableSave(param) {
        if (param == true) {
            $("#btnSave").html("Save");
            $("#btnSave").removeClass("disabled");
        }
        else {
            $("#btnSave").html("Saving...");
            $("#btnSave").addClass('disabled');
        }
    }
</script>
